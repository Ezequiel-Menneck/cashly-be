type User {
    id: String!,
    identifier: String!,
    username: String!,
    baseSalary: Float,
    transactions: [Transactions]
}

type Transactions {
    id: String!,
    amount: Float!,
    transactionDate: String!,
    description: String!,
    type: String!
    categoryId: String
}

type UserDTO {
    id: String!,
    identifier: String!,
    username: String!,
    baseSalary: Float,
    transactions: [TransactionsDTO]
}

type TransactionsDTO {
    id: String!,
    amount: Float!,
    transactionDate: String!,
    description: String!,
    type: String!
    categoryId: String
    categoryName: String
}

type TransactionsCountByCategoryDTO {
    categoryName: String!,
    transactionCount: Int!
}

type TransactionsCountByDateDTO {
    transactionCount: Int!
    date: String!
}

type UserBaseSalaryAndSumOfTransactionsAmountDTO {
    baseSalary: Int!
    transactionsAmountSum: Int!
}

input CreateUserRequestDTO {
    username: String!,
    identifier: String!,
    baseSalary: Float!
}

input CreateTransactionDTO {
    identifier: String!,
    transactionDate: String!
    amount: Float!,
    description: String!,
    type: String!
    categoryName: String
}

input UpdateTransactionDTO {
    transactionId: String!
    identifier: String!,
    amount: Float,
    description: String,
    type: String
    categoryName: String
}

